# Q1. Lets consider your data is like the below cell:
data = {"name": ["Joseph", "Jacob", "Sam", "Jesee", "Ryan", "Lisa", "Lee"],
        "job": ["teacher", "psychologist", "data scientist", "software developer", "psychologist", "psychologist", "teacher"],
        "family_size": [3, 2, 1, 4, 2, 3, 2],
        "num_cars": [3, 1, 1, 2, 2, 4, 1]}
# Q1-1: Write a program that create a dataframe from the data.
# Q1-2: Select people that are psychologist or teacher and their number of cars is greater than their family size.
# Q1-3: Select people who have at most 2 family members and at least 1 car.
# Q1-4: Write a code that get number of unique jobs in this dataset.
import pandas as pd
# Q1-1
frame = pd.DataFrame(data)
print(frame)

# Q1-2
frame2 = frame[(frame["job"] == "teacher") | (frame["job"] == "psychologist")]
print(frame2[frame.num_cars > frame.family_size])

# Q1-3
print(frame[(frame.family_size < 3) & (frame.num_cars > 0)])

# Q1-4
jobs = frame.job
print("unique jobs =", jobs.nunique())

# Q2. Lets consider you have two series like the below cell. Compute the mean of weights of each fruit.
import numpy as np
fruit = pd.Series(np.random.choice(['apple', 'banana', 'carrot'], 10))
weights = pd.Series(np.linspace(1, 10, 10))

print("mean weight =", np.mean(weights))

# Q3. Consider the below course_name array:
import numpy as np
course_name = np.array(['Python', 'JS', 'examples', 'PHP', 'html'])
# Q3-1: Write a NumPy program to get the indices of the sorted elements of course_name array.
# Q3-2: Write numpy code to check whether each element of course_name array starts with "P"
# Q3-1
indices = np.argsort(course_name)
print(indices)

# Q3-2
print(np.char.startswith(course_name, "P"))

# Q4. Consider the below student_id array:
import numpy as np
student_id = np.array([1023, 5202, 6230, 1671, 1682, 5241, 4532])
# Q4-1: Reverse the student_id array. Print both original and reversed array.
# Q4-2: Get the 3-largest values of student_id array.
# Q4-1
print(student_id)
print(np.flip(student_id))

# Q4-2
sorted_student_id = np.sort(student_id)
reversed_student_id = np.flip(sorted_student_id)
print(reversed_student_id[:3])

# Q5: Write a numpy program to print sum of all the multiples of 3 or 5 below 100
numList = np.arange(1, 100)
# find  multiple of 3 or 5
multiples = numList[(numList % 3 == 0) | (numList % 5 == 0)]
print(multiples)
# # print sum the numbers
print(multiples.sum())

# Q6. Consider the below array.
import numpy as np
arr = np.arange(12).reshape(3,4)
print(arr)
# Q6.1. Write a code to swap column 1 with column 2.
# Q6.2. Write a code to swap row 0 with row 1.
# Q6-1
arr[:, [1,2]] = arr[:, [2,1]]
print(arr)

# Q6-2
arr[[0,1]] = arr[[1,0]]
print(arr)
